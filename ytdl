#!/bin/bash

v=$(sed -n '1p' $PREFIX/etc/ytdlversion)


red="\e[31m"
green="\e[32m"
yellow="\e[33m"
orange="\e[34m"
magenta="\e[35m"
cyan="\e[36m"
e="\e[0m"
b="\e[1m"
i="\e[3m"


Update()
{
    bash -c "$(curl -fsSL https://bit.ly/install-ytdl-termux)"
}


Help()
{
    echo -e "${orange}A simple script written for easy downloading videos from YouTube using yt-dlp${e}"
    echo -e "${orange}version - ${e}${b}${green}v$v${e}  ${i}${cyan}Copyright (c) 2022 lostb053${e}"
    echo
    echo -e "${orange}USAGE:  ytdl [OPTIONS]${e}"
    echo
    echo "ytdl        invokes the function, no required options"
    echo "-u          option to update this program"
    echo "-h          to print this help message"
    echo "-q          quiet mode, will show no progress, download quietly"
    echo "-a link     to download audio, no playlist links"
    echo "-b link     download best video (with in-built audio) available, no playlist links"
    echo "-s link     download audio(only) from youtube using metadata from any spotify link"
    echo
    echo -e "${yellow}This command separately downloads best video and best audio available and merges them${e}"
    echo -e "${yellow}Use -b option to download video with in-built audio and avoid merging${e}"
    echo -e "${yellow}-s option supports spotify track, playlist, album and artist urls${e}"
    echo -e "${yellow}-q option cannot be used with other flags${e}"
}


Spotcreds()
{
    echo
    echo "${magenta}Checking credentials${e}"
    if [[ -f $PREFIX/etc/spotcreds ]]
    then
        echo -e "${magenta}Credentials found${e}"
        SPOTIFY_CLIENT_ID=$(sed -n '1p' $PREFIX/etc/spotcreds)
        SPOTIFY_CLIENT_SECRET=$(sed -n '2p' $PREFIX/etc/spotcreds)
    else
        echo -e "${red}Credentials not found${e}\n\n${yellow}Creating credentials file\nGet your credentials from${e} ${magenta}https://developer.spotify.com/my-applications${e}"
        echo -e "\n${orange}Please enter Spotify Client ID:\n${e}"
        read SPOTIFY_CLIENT_ID
        echo -e "\n\n${orange}Please enter Spotify Client Secret:\n${e}"
        read SPOTIFY_CLIENT_SECRET
        echo -e "$SPOTIFY_CLIENT_ID\n$SPOTIFY_CLIENT_SECRET" >> $PREFIX/etc/spotcreds
        echo
        echo -e "${green}Credentials saved successfully!!!${e}"
    fi
}

quiet=""

while getopts ":uqhb:a:" option; do
    case $option in
        u)
            Update
            exit;;
        h)
            Help
            exit;;
        b)
            link=${OPTARG}
            yt-dlp -f b --prefer-ffmpeg --output '$EXTERNAL_STORAGE/YTDL/%(title)s.%(ext)s' --no-mtime --no-post-overwrites --geo-bypass --ignore-errors --no-playlist $link
            exit;;
        a)
            link=${OPTARG}
            yt-dlp -f bestaudio --extract-audio --audio-format mp3 --audio-quality 320k --embed-thumbnail --add-metadata --prefer-ffmpeg --output '$EXTERNAL_STORAGE/YTDL/%(title)s.%(ext)s' --no-mtime --geo-bypass --ignore-errors --no-playlist $link
            exit;;
        s)
            Spotcreds
            link=${OPTARGS}
            spotify_dl -l $link -s -w -k -o $EXTERNAL_STORAGE/YTDL
            exit;;
        q)
            quiet="-q"
    esac
done


echo
echo -e "${magenta}Do you wish to download Video or Audio?${e}\n1. Video\n2. Audio"
echo
read filetype

echo
echo -e "${magenta}Is it Single Video Link or Playlist Link${e}\n1. Single Video Link\n2. Playlist Link"
echo
read linktype

if [[ $filetype -eq 1 ]]
then
    echo
    echo -e "${magenta}Select your preferred quality${e}\n1. High\n2. Medium\n3. Low"
    echo
    read quality
fi

echo
echo "${yellow}Please enter the link below:${e}"
echo
read link

echo
echo -e "${yellow}Working on it\nPlease wait for a while...${e}"
echo
echo


if [[ $filetype -eq 1 ]]
then
    if [[ $quality -eq 1 ]]
    then
        format="(137/399/398/bestvideo[ext=mp4]/136)+(bestaudio/140/251)"
    elif [[ $quality -eq 2 ]]
    then
        format="(397/135/396/134)+(bestaudio/140/251)"
    else
        format="worstvideo+(bestaudio/140/251)"
    fi
else
    format="bestaudio --extract-audio --audio-format mp3 --audio-quality 320k --embed-thumbnail --add-metadata"
fi


if [[ $linktype -eq 1 ]]
then
    playlist="--no-playlist"
    output='$EXTERNAL_STORAGE/YTDL/%(title)s.%(ext)s'
else
    playlist="--yes-playlist"
    output='$EXTERNAL_STORAGE/YTDL/%(playlist_index)s.%(title)s.%(ext)s'
fi


yt-dlp $quiet -f $format --prefer-ffmpeg --output $output --no-mtime --no-post-overwrites --geo-bypass --ignore-errors $playlist $link

echo
echo
echo "${green}Done${e}"
