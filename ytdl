#!/bin/bash

v=$(sed -n '1p' $PREFIX/etc/ytdlversion)


Update()
{
    bash -c "$(curl -fsSL https://bit.ly/install-ytdl-termux)"
}


Help()
{
    echo "A simple script written for easy downloading videos from YouTube using yt-dlp"
    echo "version - v$v  Copyright (c) 2022 lostb053"
    echo
    echo "USAGE:  ytdl [OPTIONS]"
    echo
    echo "ytdl        invokes the function, no required options"
    echo "-u          option to update this program"
    echo "-h          to print this help message"
    echo "-a link     to download audio, no playlist links"
    echo "-b link     download best video (with in-built audio) available, no playlist links"
    echo "-s link     download audio from youtube using metadata from any spotify link"
    echo
    echo "This command separately downloads best video and best audio available and merges them"
    echo "Use -b option to download video with in-built audio and avoid merging"
    echo "-s option supports spotify track, playlist, album and artist urls"
}


Spotcreds()
{
    echo
    echo "Checking credentials"
    if [[ -f $PREFIX/etc/spotcreds ]]
    then
        echo "Credentials found"
        SPOTIFY_CLIENT_ID=$(sed -n '1p' $PREFIX/etc/spotcreds)
        SPOTIFY_CLIENT_SECRET=$(sed -n '2p' $PREFIX/etc/spotcreds)
    else
        echo -e "Credentials not found\n\nCreating credentials file\nGet your credentials from https://developer.spotify.com/my-applications"
        echo -e "\nPlease enter Spotify Client ID:\n"
        read SPOTIFY_CLIENT_ID
        echo -e "\n\nPlease enter Spotify Client Secret:\n"
        read SPOTIFY_CLIENT_SECRET
        echo -e "$SPOTIFY_CLIENT_ID\n$SPOTIFY_CLIENT_SECRET" >> $PREFIX/etc/spotcreds
    fi
}


while getopts ":uhb:a:" option; do
    case $option in
        u)
            Update
            exit;;
        h)
            Help
            exit;;
        b)
            link=${OPTARG}
            yt-dlp -f b --prefer-ffmpeg --output '$EXTERNAL_STORAGE/YTDL/%(title)s.%(ext)s' --no-mtime --no-post-overwrites --geo-bypass --ignore-errors --no-playlist $link
            exit;;
        a)
            link=${OPTARG}
            yt-dlp -f bestaudio --extract-audio --audio-format mp3 --audio-quality 320k --embed-thumbnail --add-metadata --prefer-ffmpeg --output '$EXTERNAL_STORAGE/YTDL/%(title)s.%(ext)s' --no-mtime --geo-bypass --ignore-errors --no-playlist $link
            exit;;
        s)
            Spotcreds
            link=${OPTARGS}
            spotify_dl -l $link -s -w -k -o $EXTERNAL_STORAGE/YTDL
    esac
done


echo
echo -e "Do you wish to download Video or Audio?\n1. Video\n2. Audio"
echo

read filetype

echo
echo -e "Is it Single Video Link or Playlist Link\n1. Single Video Link\n2. Playlist Link"
echo

read format

if [[ $filetype -eq 1 ]]
then

    echo
    echo -e "Select your preferred quality\n1. High\n2. Medium\n3. Low"
    echo

    read quality

fi

echo
echo "Please enter the link below:"
echo

read link

echo
echo -e "Working on it\nPlease wait for a while..."
echo
echo


if [[ $filetype -eq 1 ]]
then

    if [[ $format -eq 1 ]]
    then

        if [[ $quality -eq 1 ]]
        then
            yt-dlp -f "(137/399/398/bestvideo[ext=mp4]/136)+(bestaudio/140/251)" --prefer-ffmpeg --no-mtime --output '$EXTERNAL_STORAGE/YTDL/%(title)s.%(ext)s' --no-post-overwrites --geo-bypass --ignore-errors --no-playlist $link

        elif [[ $quality -eq 2 ]]
        then
            yt-dlp -f "(397/135/396/134)+(bestaudio/140/251)" --prefer-ffmpeg --output '$EXTERNAL_STORAGE/YTDL/%(title)s.%(ext)s' --no-post-overwrites --no-mtime --geo-bypass --ignore-errors --no-playlist $link

        else
            yt-dlp -f "worstvideo+(bestaudio/140/251)" --prefer-ffmpeg --output '$EXTERNAL_STORAGE/YTDL/%(title)s.%(ext)s' --no-post-overwrites --geo-bypass --no-mtime --ignore-errors --no-playlist $link

        fi

    else

        if [[ $quality -eq 1 ]]
        then
            yt-dlp -f "(137/399/398/bestvideo[ext=mp4]/136)+(bestaudio/140/251)" --prefer-ffmpeg --output '$EXTERNAL_STORAGE/YTDL/%(playlist_index)s.%(title)s.%(ext)s' --no-mtime --no-post-overwrites --geo-bypass --ignore-errors --yes-playlist $link

        elif [[ $quality -eq 2 ]]
        then
            yt-dlp -f "(397/135/396/134)+(bestaudio/140/251)" --prefer-ffmpeg --output '$EXTERNAL_STORAGE/YTDL/%(playlist_index)s.%(title)s.%(ext)s' --no-post-overwrites --no-mtime --geo-bypass --ignore-errors --yes-playlist $link

        else
            yt-dlp -f "worstvideo+(bestaudio/140/251)" --prefer-ffmpeg --output '$EXTERNAL_STORAGE/YTDL/%(playlist_index)s.%(title)s.%(ext)s' --no-post-overwrites --geo-bypass --no-mtime --ignore-errors --yes-playlist $link

        fi

    fi

else

    if [ $format -eq 1 ]
    then
        yt-dlp -f bestaudio --extract-audio --audio-format mp3 --audio-quality 320k --embed-thumbnail --add-metadata --prefer-ffmpeg --output '$EXTERNAL_STORAGE/YTDL/%(title)s.%(ext)s' --no-mtime --geo-bypass --ignore-errors --no-playlist $link

    else
        yt-dlp -f bestaudio --extract-audio --audio-format mp3 --audio-quality 320k --embed-thumbnail --add-metadata --prefer-ffmpeg --output '$EXTERNAL_STORAGE/YTDL/%(playlist_index)s.%(title)s.%(ext)s' --no-mtime --no-post-overwrites --geo-bypass --ignore-errors --yes-playlist $link

    fi

fi


echo
echo
echo "Done"
